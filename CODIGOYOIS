;Dibujo de My melody en display 
;Prints a 16x16 sprite into the visual display

       JMP boot

stackTop    EQU 0x3AA  ; Initial SP
txtDisplay  EQU 0x2E0

hello:	DB "!El equipo voltios es el mejor!"	; Output string
		DB 0				; String terminator
        
vslDisplay1 EQU 0x300
 
    
sprite1: 
    DB  "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
    DB  "\xFF\xFF\x00\x00\x00\x00\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
    DB  "\xFF\x00\xF2\xF2\xF2\xF2\x00\xFF\x00\x00\x00\x00\xFF\xFF\xFF\xFF"
    DB  "\xFF\x00\xF2\xF2\xF2\xF2\xF2\x00\xF2\xF2\xF2\xF2\x00\xFF\xFF\xFF"
    DB  "\xFF\xFF\x00\x00\xF2\xF2\x00\xF2\xF2\xF2\xF2\xF2\x00\xFF\xFF\xFF"
    DB  "\xFF\xFF\xFF\x00\xF2\xF2\xF2\x00\xF2\xF2\x00\xF2\x00\xFF\xFF\xFF"
    DB  "\xFF\xFF\x00\xF2\xF2\xF2\xF2\xF2\x00\x00\x00\xF2\xF2\x00\xFF\xFF"
    DB  "\xFF\x00\xF2\xF2\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xF2\xF2\x00\xFF\xFF"
    DB  "\xFF\x00\xF2\xFF\x00\xFF\xFF\xFF\xFF\xFF\x00\xFF\xF2\x00\xFF\xFF"
    DB  "\xFF\x00\xF2\xFF\x00\xFF\xFF\xFF\xFF\xFF\x00\xFF\xF2\x00\xFF\xFF"
    DB  "\xFF\x00\xF2\xFF\xF2\xFF\xFF\xF4\xFF\xFF\xF2\xFF\xF2\x00\xFF\xFF"
    DB  "\xFF\xFF\x00\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x00\xFF\xFF\xFF"
    DB  "\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF"
    DB  "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
    DB  "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
    DB  "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"

vslDisplay2 EQU 0x600
sprite2: 
    DB  "\x00\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
    DB  "\xFF\xFF\x00\x00\x00\x00\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
    DB  "\xFF\x00\xF2\xF2\xF2\xF2\x00\xFF\x00\x00\x00\x00\xFF\xFF\xFF\xFF"
    DB  "\xFF\x00\xF2\xF2\xF2\xF2\xF2\x00\xF2\xF2\xF2\xF2\x00\xFF\xFF\xFF"
    DB  "\xFF\xFF\x00\x00\xF2\xF2\x00\xF2\xF2\xF2\xF2\xF2\x00\xFF\xFF\xFF"
    DB  "\xFF\xFF\xFF\x00\xF2\xF2\xF2\x00\xF2\xF2\xFF\xF2\x00\xFF\xFF\xFF"
    DB  "\xFF\xFF\x00\xF2\xF2\xF2\xF2\xF2\x00\x00\x00\xF2\xF2\x00\xFF\xFF"
    DB  "\xFF\x00\xF2\xF2\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xF2\xF2\x00\xFF\xFF"
    DB  "\xFF\x00\xF2\xFF\x00\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xF2\x00\xFF\xFF"
    DB  "\xFF\x00\xF2\xFF\x00\xFF\xFF\xFF\xFF\xFF\x00\xFF\xF2\x00\xFF\xFF"
    DB  "\xFF\x00\xF2\xFF\xF2\xFF\xFF\xF4\xFF\xFF\xF2\xFF\xF2\x00\xFF\xFF"
    DB  "\xFF\xFF\x00\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x00\xFF\xFF\xFF"
    DB  "\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF"
    DB  "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
    DB  "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"
    DB  "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF"

boot:
	MOV SP, stackTop	; Set SP
	MOV C, hello		; Point register C to string
	MOV D, txtDisplay	; Point register D to output
	CALL print
	HLT				; Halt execution
    	MOV C, sprite2		; C points to the sprite
	MOV D, vslDisplay2	; D points to the fb
    MOV C, sprite2

print:				; Print string
	PUSH A
	PUSH B
	MOV B, 0
.loop:
	MOVB AL, [C]	; Get character
	MOVB [D], AL	; Write to output
	INC C
	INC D
	CMPB BL, [C]	; Check if string terminator
    JNZ .loop		; Jump back to loop if not
    INC C
	MOV D, vslDisplay1
    CALL .loop2
	; Jump back to loop if not
.loop2:
	MOVB AL, [C]	; Get character
	MOVB [D], AL	; Write to output
	INC C
	INC D
    CMP D, 0x400
	JNZ .loop2	
    HLT
	POP B
	POP A
   
    
	RET
